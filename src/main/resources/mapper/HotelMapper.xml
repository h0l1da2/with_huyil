<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.with.hyuil.dao.HotelMapper">
	<insert id="insertHotel" parameterType="HotelVo">
		insert into hotel
		(ID, NAME, HOTEL_INFO_ID, USER_ID, SERVICE, ZONECODE, SIDO, SIGUNGU, ADDRESS, DETAIL, REMOVE_DATE)
		values
		(seq_hotel.nextval, #{name}, #{hotelInfoId}, #{userId}, #{service, jdbcType=VARCHAR}, #{zonecode}, #{sido}, #{sigungu}, #{address}, #{detail}, null)
	</insert>

	<select id="findByHoteluserId" parameterType="Long" resultType="HotelVo">
		select * from hotel where user_id=#{userId, jdbcType=VARCHAR} and remove_date is null 
	</select>

	<select id="findByHotelId" parameterType="long" resultType="HotelVo">
		select * from hotel where id = #{id} and remove_date is null
	</select>
	
	<select id="findByRoomId" parameterType="long" resultType="HotelVo">
		select a.name, a.hotel_info_id from hotel a left join room b on(a.id = b.hotel_id) where b.id = #{id} and a.remove_date is null
	</select>

	<select id="selectForHotelList" parameterType="HotelSearchDto" resultType="HotelListDto">
		SELECT *
		FROM (SELECT A.*, ROWNUM AS RNUM, COUNT(*) OVER () AS TOTCNT
		FROM (
		SELECT H.ID, H.NAME, R.NORMAL_PRICE AS PRICE, H.SIGUNGU, F.PATH
		FROM HOTEL H, ROOM R, FILES F, HOTEL_INFO I
		WHERE H.ID = R.HOTEL_ID
		AND I.ID = F.HOTEL_INFO_ID
		AND I.ID = H.HOTEL_INFO_ID
		AND H.SIDO = #{sido}
		AND R.MAX >= #{max}
		AND H.REMOVE_DATE IS NULL

		GROUP BY H.ID, H.NAME, R.NORMAL_PRICE, H.SIGUNGU, F.PATH, H.SIGUNGU
		ORDER BY H.ID) A)
		WHERE RNUM > #{offset}
		AND RNUM &lt;= #{limit}
	</select>
	<select id="findHostId" parameterType="long" resultType="long">
		select a.user_id from hotel a left join users b on (a.user_id = b.id) where a.id = #{id} and a.remove_date is null
	</select>

	<update id="updateHotel" parameterType="HotelVo">
		update hotel
		set name = #{name}, service = #{service}, zonecode = #{zonecode}, sido = #{sido}, sigungu = #{sigungu}, address = #{address}, detail = #{detail}
		where id = #{id}
	</update>

	<select id="findAllStars" resultType="StarDto">
		SELECT H.ID,
		    SUM(S.CLEAN) CLEAN,
			SUM(S.FACILITIES) FACILITIES,
			SUM(S.CONDITION) CONDITION,
			SUM(S.ORGANIC) ORGANIC, COUNT(S.CLEAN) TOTCNT
		FROM HOTEL H, STAR S
		WHERE H.ID IN
		<foreach collection="hotelListDtos" item="hotel" open="(" close=")" separator=",">
			#{hotel.id, jdbcType = VARCHAR}
		</foreach>
		AND H.ID = S.HOTEL_ID(+)
		GROUP BY H.ID
		ORDER BY H.ID
	</select>
	<select id="selectAllCnt" resultType="Integer">
		SELECT COUNT(*)
		FROM HOTEL
		WHERE REMOVE_DATE IS NULL
	</select>
	<update id="delHotel" parameterType="HotelVo">
		update hotel set remove_date = sysdate where id = #{id}
	</update>

</mapper>