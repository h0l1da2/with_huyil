<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.with.hyuil.dao.UsersMapper">
    <select id="selectAllHost" parameterType="AdminPageDto" resultType="AdminUserListDto">
        SELECT *
        FROM (SELECT A.*, ROWNUM AS RNUM, COUNT(*) OVER () AS TOTCNT
              FROM (
        SELECT U.ID, U.USER_ID, U.NAME, U.EMAIL, U.TEL,
               B.ACCOUNT, U.JOIN_DATE, U.LAST_LOGIN, U.OUT
        FROM USERS U, BUSINESS B
        WHERE U.BUSINESS_ID = B.ID
          AND U.TYPE = 'HOST'
        ORDER BY JOIN_DATE DESC)A)
        WHERE RNUM >= #{viewPage}
          AND RNUM &lt;= #{limit}
    </select>
    <select id="selectAllUsersCnt" parameterType="AdminPageDto" resultType="Integer">
        SELECT COUNT(*)
        FROM (SELECT A.*, ROWNUM AS RNUM, COUNT(*) OVER () AS TOTCNT
              FROM (
        SELECT *
        FROM USERS
        WHERE TYPE = #{type}
        ORDER BY JOIN_DATE DESC)A)
        WHERE RNUM >= #{viewPage}
          AND RNUM &lt;= #{limit}
    </select>
    <select id="selectAllUser" parameterType="AdminPageDto" resultType="AdminUserListDto">
        SELECT *
        FROM (SELECT A.*, ROWNUM AS RNUM, COUNT(*) OVER () AS TOTCNT
              FROM (
        SELECT ID, USER_ID, NAME, EMAIL, TEL,
               JOIN_DATE, LAST_LOGIN, OUT
        FROM USERS
        WHERE TYPE = 'USER'
        ORDER BY JOIN_DATE DESC)A)
        WHERE RNUM >= #{viewPage}
          AND RNUM &lt;= #{limit}
    </select>
    <select id="selectAllCnt" resultType="Integer" parameterType="OutTypeDto">
        SELECT COUNT(*)
        FROM USERS
        WHERE OUT = #{out}
    </select>
    <select id="selectAllUserCntForAdmin" resultType="Integer" parameterType="OutTypeDto">
        SELECT COUNT(*)
        FROM USERS
        WHERE OUT = #{out}
          AND TYPE = #{type}
    </select>
    <insert id="insertUser" parameterType="UsersVo">
        INSERT INTO USERS
        ( ID, USER_ID, PASSWORD, EMAIL, TEL, NAME, WHERES, JOIN_DATE, LAST_LOGIN, TYPE )
        VALUES
            ( SEQ_USERS.NEXTVAL, #{userId}, #{password}, #{email}, #{tel}, #{name}, #{wheres}, SYSDATE, SYSDATE, #{type} )
    </insert>
    <insert id="insertAdmin" parameterType="UsersVo">
        INSERT INTO USERS
            ( ID, USER_ID, PASSWORD, NAME, JOIN_DATE, LAST_LOGIN, TYPE, WHERES )
        VALUES
<<<<<<< HEAD
            ( SEQ_USERS.NEXTVAL, #{userId}, #{password}, #{name}, SYSDATE, SYSDATE, #{type} )
=======
            ( SEQ_USERS.NEXTVAL, #{userId}, #{password}, #{name}, SYSDATE, SYSDATE, #{type}, #{wheres} )
>>>>>>> 5b20389cfdba9458cb144c66b81b3ecec5e92382
    </insert>
    <insert id="insertHost" parameterType="UsersVo">
        INSERT INTO USERS
        ( ID, USER_ID, PASSWORD, EMAIL, TEL, NAME, WHERES, JOIN_DATE, LAST_LOGIN, BUSINESS_ID, TYPE )
        VALUES
            ( SEQ_USERS.NEXTVAL, #{userId}, #{password}, #{email}, #{tel}, #{name}, #{wheres}, SYSDATE, SYSDATE, #{businessVo.id, jdbcType=VARCHAR}, #{type} )
    </insert>
    <insert id="insertBusiness" parameterType="BusinessVo">
        INSERT INTO BUSINESS
            ( ID, ACCOUNT, BANK_NUMBER, BANK )
        VALUES
            ( SEQ_BUSINESS.NEXTVAL, #{account}, #{bankNumber}, #{bank} )
    </insert>
    <insert id="insertRoles" parameterType="RolesVo">
        INSERT INTO ROLES
            ( ID, ROLE_NAME, USER_ID )
        VALUES
            ( SEQ_ROLES.NEXTVAL, #{roleName}, #{usersVo.id, jdbcType=VARCHAR} )
    </insert>
    <insert id="insertWhyDelete" parameterType="DeleteDto">
        INSERT INTO WHY_DELETE
            ( ID, PRIVACY, OTHER_SITE, HATE, JOIN_AGAIN, ETC )
        VALUES
            ( SEQ_WHY_DELETE.NEXTVAL, #{privacy}, #{otherSite}, #{hate}, #{joinAgain}, #{etc} )
    </insert>
    <select id="count" resultType="Integer">
        SELECT COUNT(*)
        FROM USERS
    </select>
    <select id="findBusinessByAccount" parameterType="String" resultType="BusinessVo">
        SELECT *
        FROM BUSINESS
        WHERE ACCOUNT = #{account}
    </select>
    <select id="findByNameEmail" parameterType="FindIdDto" resultType="UsersVo">
        SELECT *
        FROM USERS
        WHERE EMAIL = #{email} AND NAME = #{name}
    </select>
    <select id="findByTel" parameterType="FindIdDto" resultType="UsersVo">
        SELECT *
        FROM USERS
        WHERE TEL = #{tel}
    </select>
    <select id="findByBusinessId" parameterType="Long" resultType="BusinessVo">
        SELECT *
        FROM BUSINESS
        WHERE ID = #{id, jdbcType=VARCHAR}
    </select>
    <select id="findByUserId" parameterType="String" resultType="UsersVo">
        SELECT *
        FROM USERS
        WHERE USER_ID = #{userId}
    </select>
    <select id="findByUserIdAndPassword" parameterType="String" resultType="UsersVo">
        SELECT *
        FROM USERS
        WHERE USER_ID = #{userId} AND PASSWORD = #{password}
    </select>
    <select id="findRoles" parameterType="Long" resultType="RolesVo">
        SELECT *
        FROM ROLES
        WHERE USER_ID = #{userId, jdbcType=VARCHAR}
    </select>
    <update id="updateLastLogin" parameterType="String">
        UPDATE USERS
        SET LAST_LOGIN = SYSDATE
        WHERE USER_ID = #{userId}
    </update>
    <update id="updateForDelete" parameterType="Map">
        UPDATE USERS
        SET REMOVE_DATE = SYSDATE, OUT = #{out}
        WHERE USER_ID = #{userId}
    </update>
    <select id="findByUserIdEmail" parameterType="EmailDto" resultType="UsersVo">
        SELECT *
        FROM USERS
        WHERE USER_ID = #{userId} AND EMAIL = #{email}
    </select>
    <update id="updateEmail" parameterType="EmailDto">
        UPDATE USERS
        SET EMAIL = #{newEmail}
        WHERE USER_ID = #{userId}
    </update>
    <update id="updatePassword" parameterType="PasswordDto">
        UPDATE USERS
        SET PASSWORD = #{newPassword}
        WHERE USER_ID = #{userId}
    </update>
    <!-- namsu수정 -->
    <update id="updatehost" parameterType="UsersDto">
    	update users set tel = #{tel} where user_id = #{userId}
    </update>
    
    <update id="updatebusiness" parameterType="BusinessDto">
    	update business set account = #{account}, bank_number = #{bankNumber}, bank = #{bank}
    	where id = #{id}
    </update>
    
    <select id="getId" parameterType="String" resultType="UsersDto">
    	select * from users where user_id = #{userId}
    </select>
</mapper>